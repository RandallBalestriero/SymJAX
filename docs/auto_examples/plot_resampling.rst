.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_resampling.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_auto_examples_plot_resampling.py:


Basic image resampling and alignment
====================================

demonstration on how to perform basic image preprocessing



.. image:: /auto_examples/images/sphx_glr_plot_resampling_001.svg
    :alt: plot resampling
    :class: sphx-glr-single-img






.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np
    import symjax


    image1 = np.random.rand(3, 2, 4)
    image2 = np.random.rand(3, 4, 2)
    image3 = np.random.rand(3, 4, 4)
    all_images = [image1, image2, image3]

    images = symjax.data.utils.resample_images(all_images, (6, 6))

    fig = plt.figure(figsize=(8, 3))
    for i in range(3):

        plt.subplot(2, 3, i + 1)
        plt.imshow(all_images[i].transpose(1, 2, 0), aspect="auto", vmax=10, cmap="jet")
        plt.xticks([])
        plt.yticks([])

        plt.subplot(2, 3, i + 4)
        plt.imshow(images[i].transpose(1, 2, 0), aspect="auto", vmax=10, cmap="jet")
        plt.xticks([])
        plt.yticks([])

    plt.tight_layout()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.220 seconds)


.. _sphx_glr_download_auto_examples_plot_resampling.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_resampling.py <plot_resampling.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_resampling.ipynb <plot_resampling.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
