.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_sgd.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_auto_examples_plot_sgd.py:


Basic gradient descent (and reset)
==================================

demonstration on how to compute a gradient and apply a basic gradient update
rule to minimize some loss function



.. image:: /auto_examples/images/sphx_glr_plot_sgd_001.svg
    :alt: plot sgd
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /home/vrael/anaconda3/envs/jax/lib/python3.7/site-packages/jax/lib/xla_bridge.py:125: UserWarning: No GPU/TPU found, falling back to CPU.
      warnings.warn('No GPU/TPU found, falling back to CPU.')






|


.. code-block:: default


    import symjax
    import symjax.tensor as T
    import matplotlib.pyplot as plt

    # GRADIENT DESCENT
    z = T.Variable(3.0, dtype="float32")
    loss = (z - 1) ** 2
    g_z = symjax.gradients(loss, [z])[0]
    symjax.current_graph().add_updates({z: z - 0.1 * g_z})

    train = symjax.function(outputs=[loss, z], updates=symjax.get_updates())

    losses = list()
    values = list()
    for i in range(200):
        if (i + 1) % 50 == 0:
            symjax.reset_variables("*")
        a, b = train()
        losses.append(a)
        values.append(b)

    plt.figure()

    plt.subplot(121)
    plt.plot(losses, "-x")
    plt.ylabel("loss")
    plt.xlabel("number of gradient updates")

    plt.subplot(122)
    plt.plot(values, "-x")
    plt.axhline(1, c="red")
    plt.ylabel("value")
    plt.xlabel("number of gradient updates")

    plt.tight_layout()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.433 seconds)


.. _sphx_glr_download_auto_examples_plot_sgd.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_sgd.py <plot_sgd.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_sgd.ipynb <plot_sgd.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
